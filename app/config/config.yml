imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@JUMAINAdminBundle/Resources/config/services.yml" }
    - { resource: "@JUMAINDefaultBundle/Resources/config/services.yml" }
    - { resource: "@JUMAINHealthBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi:             ~
    #translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
#    exception_controller: 'FOS\RestBundle\Controller\ExceptionController::showAction'

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        entity_managers:
           default:
               auto_mapping: true
               connection: default
               mappings:
                    gedmo_translatable:
                        type: annotation
                        prefix: Gedmo\Translatable\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translatable/Entity"
                        alias: GedmoTranslatable # this one is optional and will default to the name set for the mapping
                        is_bundle: false
                    gedmo_translator:
                        type: annotation
                        prefix: Gedmo\Translator\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translator/Entity"
                        alias: GedmoTranslator # this one is optional and will default to the name set for the mapping
                        is_bundle: false
                    gedmo_loggable:
                        type: annotation
                        prefix: Gedmo\Loggable\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Loggable/Entity"
                        alias: GedmoLoggable # this one is optional and will default to the name set for the mapping
                        is_bundle: false
                    gedmo_tree:
                        type: annotation
                        prefix: Gedmo\Tree\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Tree/Entity"
                        alias: GedmoTree # this one is optional and will default to the name set for the mapping
                        is_bundle: false
               dql:
                  datetime_functions:
                      year: JUMAIN\AdminBundle\Dql\Year
                      month: JUMAIN\AdminBundle\Dql\Month
                      week: JUMAIN\AdminBundle\Dql\Week
                      day: JUMAIN\AdminBundle\Dql\Day
                  numeric_functions:
                      Rand: JUMAIN\AdminBundle\Dql\RandFunction

        #naming_strategy: doctrine.orm.naming_strategy.underscore
        #auto_mapping: true

stof_doctrine_extensions:
    default_locale: en_US
#    uploadable:
#        # Default file path: This is one of the three ways you can configure the path for the Uploadable extension
#        default_file_path:       %kernel.root_dir%/../web/uploads
#
#        # Mime type guesser class: Optional. By default, we provide an adapter for the one present in the HttpFoundation component of Symfony
#        mime_type_guesser_class: Stof\DoctrineExtensionsBundle\Uploadable\MimeTypeGuesserAdapter
#
#        # Default file info class implementing FileInfoInterface: Optional. By default we provide a class which is prepared to receive an UploadedFile instance.
#        default_file_info_class: Stof\DoctrineExtensionsBundle\Uploadable\UploadedFileInfo
#    orm:
#       default:
#            tree: true
#            sluggable: true
#            uploadable: true
#           timestampable: true # needed: listeners are not enabled by default
#       other:
#            timestampable: true
#

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

fos_elastica:
    clients:
        default: { host: localhost, port: 9200 }
    serializer:
        callback_class: FOS\ElasticaBundle\Serializer\Callback
        serializer: serializer
    indexes:
        website:
            client: default
            index_name: website_qa
jms_serializer:
    metadata:
        auto_detection: true
    handlers:
        datetime:
            default_format: c
jms_di_extra:
    doctrine_integration: true

jms_aop:
    cache_dir: %kernel.cache_dir%/jms_aop

doctrine_migrations:
        dir_name: "%kernel.root_dir%/DoctrineMigrations"
        namespace: Application\Migrations
        table_name: migration_versions
        name: Application Migrations

# Nelmio CORS Configuration
nelmio_cors:
    defaults:
        allow_credentials: false
        allow_origin: ['*']
        allow_headers: ['*']
        allow_methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS']
        max_age: 3600
        hosts: []
        origin_regex: false

#fos_oauth_server:
#    db_driver: orm

fos_rest:
    disable_csrf_role: ROLE_API
    body_listener: true
    routing_loader:
        default_format: json
    format_listener:
        rules:
            - { path: ^/api/, priorities: [ json ], fallback_format: json, prefer_extension: false }
            - { path: ^/, stop: true }
    param_fetcher_listener: true
    versioning:
        enabled: true
        resolvers:
            media_type:
              enabled: true
#    exception:
#        codes:
#            'Symfony\Component\Routing\Exception\ResourceNotFoundException': 404
#            'Doctrine\ORM\OptimisticLockException': HTTP_CONFLICT
#        messages:
#            'Symfony\Component\Routing\Exception\ResourceNotFoundException': true
    exception:
        enabled: true
        codes:
            'Symfony\Component\HttpKernel\Exception\BadRequestHttpException': 400
            'Symfony\Component\HttpKernel\Exception\NotFoundHttpException': 404
            'Symfony\Component\HttpKernel\Exception\UnprocessableEntityHttpException': 422
            'Doctrine\ORM\OptimisticLockException': HTTP_CONFLICT
        messages:
            'Symfony\Component\HttpKernel\Exception\BadRequestHttpException': true
            'Symfony\Component\HttpKernel\Exception\NotFoundHttpException': true
            'Symfony\Component\HttpKernel\Exception\UnprocessableEntityHttpException': true
    allowed_methods_listener: true
    access_denied_listener:
        json: true
    view:
        mime_types:
            json: ['application/json', 'application/json;version=1.0', 'application/json;version=1.1', 'application/json;version=1.2']
        formats:
#            jsonp: true
            json: true
            xml: true
#            rss: false
        templating_formats:
            html: true
#        force_redirects:
#            html: true
#        failed_validation: HTTP_BAD_REQUEST
#        default_engine: twig

lexik_jwt_authentication:
    private_key_path: '%kernel.root_dir%/../var/jwt/private.pem'
    public_key_path:  '%kernel.root_dir%/../var/jwt/public.pem'
    pass_phrase:      '%jwt_key_pass_phrase%'
    token_ttl: 3600

fos_user:
      db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
      from_email:
          address: "%mailer_user%"
          sender_name: "Community Health"
      firewall_name: admin_secured_area
      user_class: JUMAIN\AdminBundle\Entity\User
      service:
          user_manager: pugx_user_manager

pugx_multi_user:
  users:
    admin_user:
        entity:
          class: JUMAIN\AdminBundle\Entity\AdminUser
#          factory:
        registration:
          form:
            type: JUMAIN\AdminBundle\Form\Type\AdminUserRegistrationFormType
            name: fos_user_registration_form
            validation_groups:  [Registration, Default]
          template: JUMAINAdminBundle:Registration:register.html.twig
        profile:
          form:
            type: JUMAIN\AdminBundle\Form\Type\AdminUserProfileFormType
            name: fos_user_profile_form
            validation_groups:  [Profile, Default]
    normal_user:
        entity:
          class: JUMAIN\AdminBundle\Entity\NormalUser
        registration:
          form:
            type: JUMAIN\AdminBundle\Form\Type\NormalUserRegistrationFormType
          template: JUMAINConsumerBundle:Registration:register.html.twig
        profile:
          form:
            type: JUMAIN\AdminBundle\Form\Type\NormalUserProfileFormType


